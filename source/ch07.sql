/*
	7. 테이블 조인하기
	7.1 조인이란
*/
-- 조인이 필요한 이유?
-- 예: "최근 주문 내역을 고객 이름과 상품명을 포함해서 보여줘"라고 요청이 왔을 때
-- customers, orders, products  테이블에서 주문 내역이 필요하기 때문에 orders의 정보가 필요
-- 그런데 orders 테이블에는 고객 이름과 상품명이 없다.
-- 이 테이블만 보고서는 customer_id가 1인 고객이 누구인지, product_id가 4인 상품이 무엇인지 즉시 알 수 없음
-- 결국 추가적으로
-- 고객 이름을 구하기 위해서는 customers 테이블을 통해 customer_id에 해당하는 고객명을 하나하나 직접 찾고
-- 상품명을 구하기 위해서는 products 테이블을 통해 product_id에 해당하는 상품명을 하나하나 직접 찾아야 함

-- 그렇다면 왜 이렇게 불편하게 데이터를 여러 테이블에 나누어 저장하는 걸까?
-- 차라리 처음부터 모든 데이터를 하나의 테이블(예: orders)에 저장한다면?
-- 데이터를 조회할 때는 편해 보이지만 이런 방식은 심각한 문제들이 발생함
-- 1) 데이터 중복
-- '재현' 고객이 상품을 100번 주문했다고 가정해 보자
-- 고객의 이름, 이메일, 주소 정보가 100번이나 불필요하게 반복 저장됨 => 저장 공간의 낭비
-- 2) 갱신 이상
-- 만약 '재현' 고객이 이메일 주소를 변경했다고 가정해 보자
-- 우리는 '재현'이 주문한 100개의 주문 데이터를 모두 찾아서, 이메일 정보를 일일이 새로운 주소로 변경해야 함 
-- 만약 실수로 단 하나라도 누락한다면? 
-- 어떤 주문에서는 고객의 이메일이 예전 주소로, 다른 주문에서는 새 주소로 저장되어 데이터의 일관성이 깨져버림
-- 어떤 정보가 맞는 건지 알 수 없게 됨


-- 조인이란?
-- 두 개 이상의 테이블로 나뉜 여러 정보를 하나로 연결하여 가져오는 명령
-- 테이블 간에 일치하는 컬럼을 기준으로 두 테이블을 하나로 합쳐 보여줌
-- 마치 처음부터 하나의 테이블이었던 것처럼 보여주는 기능

-- 조인 컬럼(기준이 되는 컬럼): 
-- 두 테이블이 동시에 가지고 있는 컬럼으로 조인하기 위해 사용하는 컬럼
-- 보통 한 테이블의 외래키(FK)와 다른 테이블의 기본키(PK)를 사용

-- (참고) 외래키를 사용하지 않아도 JOIN은 얼마든지 할 수 있음
-- 기본키(PK)와 외래키(FK)를 써서 테이블을 연결하는 것이 가장 일반적이고 기본이 되는 방식
-- 그러나 조인의 핵심 원리는 '두 테이블의 특정 열(column)의 값이 같으면' 연결
-- 즉, 어떤 컬럼이든 데이터 타입만 같다면 조인 조건으로 쓸 수 있음
-- 예: 동명이인 찾기(이름으로 조인)
-- 고객 테이블과 직원 테이블에 모두 name 컬럼이 있다면, 
-- 이 두 테이블을 name으로 조인하여 고객과 직원의 이름이 같은 경우를 찾아낼 수 있다.

















